openapi: 3.0.0
info:
  title: Docplanner Technical assesment API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Servidor local
paths:
  /tasks:
    get:
      summary: Get All tasks
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Number of pages
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Items por
          required: false
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: List of tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    assigned_to:
                      type: string
                      nullable: true
                    status:
                      type: string
                      enum: [pending, in_progress, completed]
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
              examples:
                success:
                  summary: A successful response with task data
                  value:
                    data:
                      - id: 1
                        text: "Task 1"
                        assigned_to: "John Doe"
                        status: "in_progress"
                        created_at: "2025-02-25T10:00:00Z"
                        updated_at: "2025-02-25T12:00:00Z"
                      - id: 2
                        text: "Task 2"
                        assigned_to: "Jane Doe"
                        status: "completed"
                        created_at: "2025-02-24T09:30:00Z"
                        updated_at: "2025-02-25T08:00:00Z"
        "401":
          description: Invalid Credentials
    post:
      summary: Create new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "first task"
                assigned_to:
                  type: integer
                  nullable: true
                  example: 99
                status:
                  type: string
                  enum: [pending, in_progress, completed]
                  example: "pending"
      responses:
        "201":
          description: task created successfuly
          content:
            application/json:
              examples:
                taskUpdated:
                  summary: A task updated successfully
                  value:
                    id: 3
                    text: "Post a task"
                    assigned_to: 99
                    status: "completed"
        "400":
          description: Validation error
        "401":
          description: Invalid Credentials
  /tasks/{id}:
    put:
      summary: Update a task by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "modified task3"
                assigned_to:
                  type: integer
                  nullable: true
                  example: 99
                status:
                  type: string
                  enum: [pending, in_progress, completed]
                  example: "in_progress"
      responses:
        "201":
          description: Task updated succesfully
          content:
            application/json:
              examples:
                taskUpdated:
                  summary: A task updated successfully
                  value:
                    id: 3
                    text: "Modified task"
                    assigned_to: "Chandler Bing"
                    status: "completed"
        "400":
          description: Validation error
        "401":
          description: Invalid Credentials
        "404":
          description: Task not found
    delete:
      summary: Delete task by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: task deleted successfully
        "400":
          description: Validation error
        "401":
          description: Invalid Credentials
  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "chandler@friends.com"
                password:
                  type: string
                  example: "password"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              examples:
                loginSuccess:
                  summary: Login successful response
                  value:
                    token: "JWT_TOKEN"
        "400":
          description: Validation error
        "401":
          description: Invalid Credentials
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT